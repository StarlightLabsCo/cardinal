// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Character {
  id String @id @default(cuid())

  name String @unique
  age  Int

  tasks Task[]

  memories            Memory[]
  reflectionThreshold Float    @default(0)

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// There are 2 types of memories:
// - Observations - memories created by the user, or by the system in obsveration of the world
// - Reflections - after an importance threshold is reached, the system will create a reflection based on the observations so far
model Memory {
  id String @id @default(cuid())

  characterId String?
  character   Character? @relation(fields: [characterId], references: [id], onDelete: Cascade)

  memory String

  // The 3 values below are used to calculate the relevancy of a memory
  embedding  String
  importance Float
  accessedAt DateTime @default(now())

  gameDate DateTime // This is being repsented as a DateTime but it is a game specific date, the simulation will be at like 4x speed or something

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id String @id @default(cuid())

  characterId String?
  character   Character? @relation(fields: [characterId], references: [id], onDelete: Cascade)

  task String

  gameDateStart DateTime
  gameDateEnd   DateTime

  // Metadata
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
